# RSE GitHub Integrator Configuration
# Integrates with AI News Dashboard MLOps Infrastructure

integrator:
  id: "rse-github-bot-v1"
  name: "RSE GitHub Integrator"
  version: "1.0.0"
  description: "Automates creating Markdown/JSON files in /news directory and opens pull requests"

# GitHub API configuration
github:
  owner: "ai-news-dashboard"  # Repository owner
  repo: "AI-News"             # Repository name
  base_branch: "main"         # Base branch for PRs
  reviewers:                  # Default reviewers for RSE PRs
    - "veteran-developer"
    - "rse-specialist"
    - "mlops-engineer"
  labels:                     # Default labels for RSE PRs
    - "rse"
    - "automated"
    - "content"
    - "research"
  team_reviewers:             # Team reviewers (if using GitHub teams)
    - "rse-team"
    - "content-reviewers"

# File management configuration
news_directory: "./news"
file_patterns:
  json: "rse_{date}_{domain}_{hash}.json"
  md: "rse_{date}_{domain}_{hash}.md"
  yaml: "rse_{date}_{domain}_{hash}.yaml"

# Content validation settings
validation:
  enabled: true
  strict_mode: false          # If true, fails on any validation warning
  max_title_length: 200
  max_summary_length: 1000
  min_keywords: 1
  max_keywords: 10
  required_fields:
    - "title"
    - "summary"
    - "domain"
    - "keywords"
    - "content"
    - "author"
  allowed_domains:
    - "Machine Learning"
    - "Data Science"
    - "Software Engineering"
    - "Research Computing"
    - "High Performance Computing"
    - "Scientific Software"
    - "Digital Humanities"
    - "Artificial Intelligence"
    - "Natural Language Processing"
    - "Computer Vision"

# CI/CD integration settings
ci_integration:
  wait_for_checks: true       # Wait for CI checks before auto-actions
  auto_merge: false           # Auto-merge PRs when all checks pass
  required_checks:            # Required CI checks that must pass
    - "mlops-pipeline"
    - "veteran-agent-integration"
    - "lint-and-test"
  timeout_minutes: 30         # Timeout for CI checks
  retry_failed_checks: true
  max_retries: 3

# Webhook configuration
webhook:
  enabled: true
  secret_env_var: "GITHUB_WEBHOOK_SECRET"
  events:
    - "pull_request"
    - "push"
    - "workflow_run"
    - "issue_comment"
  rse_branch_pattern: "^rse/.*"
  auto_respond: true          # Auto-respond to webhook events

# Notification settings
notifications:
  slack:
    enabled: false
    webhook_url_env: "SLACK_WEBHOOK_URL"
    channel: "#rse-updates"
    mention_users:
      - "@rse-team"
  email:
    enabled: false
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    from_email_env: "RSE_EMAIL_FROM"
    to_emails:
      - "rse-team@organization.com"
  discord:
    enabled: false
    webhook_url_env: "DISCORD_WEBHOOK_URL"

# Security settings
security:
  verify_webhook_signature: true
  allowed_users:              # Users allowed to trigger RSE operations
    - "veteran-developer"
    - "rse-specialist"
    - "mlops-engineer"
  allowed_organizations:
    - "ai-news-dashboard"
  rate_limiting:
    enabled: true
    max_requests_per_hour: 100
    max_prs_per_day: 20

# Logging configuration
logging:
  level: "INFO"               # DEBUG, INFO, WARNING, ERROR, CRITICAL
  file: "rse_github_integrator.log"
  max_file_size_mb: 10
  backup_count: 5
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  include_request_id: true

# Performance settings
performance:
  async_operations: true
  max_concurrent_requests: 5
  request_timeout_seconds: 30
  retry_delays: [1, 2, 4, 8]  # Exponential backoff delays
  cache_enabled: true
  cache_ttl_seconds: 3600

# Content templates
templates:
  pr_title: "[RSE] Add {domain} content: {title}"
  pr_body: |
    ## RSE Content Addition
    
    **Title**: {title}
    **Domain**: {domain}
    **Author**: {author}
    
    ### Summary
    {summary}
    
    ### Keywords
    {keywords}
    
    ### File Details
    - **Path**: `{file_path}`
    - **Type**: {content_type}
    - **Branch**: `{branch_name}`
    
    ### Checklist
    - [x] Content validated against schema
    - [x] File created in correct location
    - [ ] CI checks passed
    - [ ] Code review completed
    
    ---
    *This PR was automatically created by the RSE GitHub Integrator*
  
  commit_message: |
    Add RSE content: {title}
    
    Domain: {domain}
    Author: {author}
    Type: {content_type}
    
    Generated by RSE GitHub Integrator
  
  branch_name: "rse/add-{domain_slug}-{date}-{hash}"

# Schema validation paths
schemas:
  directory: "./schemas"
  files:
    json: "rse_content.json"
    markdown: "rse_markdown.json"
    yaml: "rse_yaml.json"

# Integration with existing agents
agent_integration:
  veteran_developer:
    enabled: true
    auto_request_review: true
    include_in_notifications: true
  
  rse_fetch_specialist:
    enabled: true
    coordinate_content: true
    share_metadata: true
  
  rse_summarization_engineer:
    enabled: true
    auto_summarize: false
    quality_check: true

# MLOps integration
mlops:
  trigger_pipeline: false     # Trigger MLOps pipeline on RSE content
  model_validation: false     # Validate content against ML models
  metrics_collection: true    # Collect metrics for RSE operations
  experiment_tracking: false  # Track RSE content as ML experiments

# Development and testing
development:
  debug_mode: false
  dry_run: false              # If true, don't actually create PRs
  test_repository:
    owner: "ai-news-dashboard"
    repo: "AI-News-Test"
  mock_github_api: false
  verbose_logging: false

# Feature flags
features:
  auto_labeling: true
  smart_reviewers: true       # Assign reviewers based on content domain
  content_analysis: true      # Analyze content for quality metrics
  duplicate_detection: true   # Detect duplicate content
  auto_formatting: true       # Auto-format content before committing
  link_validation: true       # Validate URLs in content
  spell_check: false          # Run spell check on content
  plagiarism_check: false     # Check for plagiarism

# Monitoring and metrics
monitoring:
  enabled: true
  metrics_endpoint: "/metrics"
  health_endpoint: "/health"
  prometheus_enabled: false
  custom_metrics:
    - "rse_prs_created_total"
    - "rse_content_validation_errors_total"
    - "rse_ci_check_duration_seconds"
    - "rse_webhook_events_total"

# Backup and recovery
backup:
  enabled: false
  s3_bucket: "rse-content-backup"
  backup_frequency: "daily"
  retention_days: 30
  encrypt_backups: true

# API configuration
api:
  enabled: true
  port: 8080
  host: "0.0.0.0"
  cors_enabled: true
  rate_limiting: true
  authentication:
    enabled: true
    method: "token"           # token, oauth, basic
    token_env_var: "RSE_API_TOKEN"

# Environment-specific overrides
environments:
  development:
    github:
      repo: "AI-News-Dev"
    ci_integration:
      wait_for_checks: false
    development:
      debug_mode: true
      dry_run: true
  
  staging:
    github:
      repo: "AI-News-Staging"
    ci_integration:
      auto_merge: false
    notifications:
      slack:
        enabled: true
  
  production:
    github:
      repo: "AI-News"
    ci_integration:
      auto_merge: false
      wait_for_checks: true
    security:
      verify_webhook_signature: true
    monitoring:
      enabled: true
      prometheus_enabled: true